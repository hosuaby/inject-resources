plugins {
    id 'java-library'
    id 'signing'
    id 'maven-publish'
}

if (SPRING_VERSION > '3') {
    compileJava {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    compileTestJava {
        sourceCompatibility = JavaVersion.VERSION_17
    }
}

jar {
    from project.sourceSets.main.output
    from project(':inject-resources-commons').sourceSets.main.output
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.name
            from components.java
            artifact sourcesJar
            artifact javadocJar
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = '@InjectResources Spring'
                description = '@InjectResources Spring module'
                url = 'https://github.com/hosuaby/inject-resources'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'hosuaby'
                        name = 'Alexei KLENIN'
                        email = 'alexei.klenin@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:hosuaby/inject-resources.git'
                    developerConnection = 'scm:git:git@github.com:hosuaby/inject-resources.git'
                    url = 'https://github.com/hosuaby/inject-resources'
                }
            }
        }
    }
    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username System.getenv('SONATYPE_USERNAME')
                password System.getenv('SONATYPE_PASSWORD')
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask('publish') }
    useInMemoryPgpKeys(SIGNING_KEY, '')
    sign publishing.publications.mavenJava
}

tasks.withType(GenerateModuleMetadata).configureEach {
    suppressedValidationErrors.add('enforced-platform')
}

dependencies {
    api project(':inject-resources-core')

    compileOnly project(':inject-resources-commons')
    compileOnly group: 'org.springframework', name: 'spring-context'
    compileOnly group: 'org.yaml', name: 'snakeyaml', version: SNAKE_YAML_VERSION

    implementation enforcedPlatform(group: 'org.springframework.boot', name: 'spring-boot-dependencies', version: SPRING_VERSION)
    implementation group: 'org.reflections', name: 'reflections', version: '0.10.2'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: JUNIT_VERSION
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: JUNIT_VERSION
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.14.0'
    testImplementation group: 'io.leangen.geantyref', name: 'geantyref', version: '1.3.11'

    testImplementation project(':test-commons')
    testImplementation project(':inject-resources-commons')
    testImplementation group: 'org.yaml', name: 'snakeyaml', version: SNAKE_YAML_VERSION
    testImplementation group: 'org.junit.platform', name: 'junit-platform-testkit', version: '1.6.0'
    testImplementation group: 'com.tngtech.archunit', name: 'archunit', version: '0.14.1'
}
